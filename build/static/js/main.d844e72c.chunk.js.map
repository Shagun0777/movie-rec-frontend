{"version":3,"sources":["components/Movies.js","components/ExpandableList.js","login.js","movierecommend.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","list_movies","console","log","map","movie","id","Array","isArray","href","ExpandableList","data","header","className","style","color","backgroundColor","base_url","Login","params","useParams","useState","user","setUser","watched","setWatched","exact_match","setExact","recommend_by_name","setName","recommend_by_genre","setGenre","recommend_by_cast","setCast","recommend_final","setFinal","sort","one","useEffect","fetchMovies","options","a","Axios","response","user_log","watched_user","fetchRecommended","length","exact_match_f","convert_react_child","key","ans","i","push","React","selected","setSelected","x","sortMovies","k","b","localeCompare","reverse","toUpperCase","marginBlock","onChange","event","target","value","Recommend","fetchScraps","Home","all_movies_list","setScraps","App","LoginV1","user_id","RegisterAndLogin","movie_name","RecommendMovie","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d844e72c.chunk.js","sourcesContent":["\n\nconst Movies = ({ list_movies }) => {\n  let position = 0;\n  console.log(list_movies)\n  return (\n    <div>\n      {list_movies.map((movie) => (\n        <div id=\"row\">\n          <div>\n          {Array.isArray(movie) && <a href={movie[2]}>{movie[0]}</a>}\n          {!Array.isArray(movie) && movie}\n          </div>\n          <div>\n            {Array.isArray(movie) && movie[1]}\n            </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Movies;\n","import \"./../App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Movies from \"./Movies\";\nimport { BsChevronDoubleDown } from \"react-icons/bs\";\nimport { BsChevronDoubleUp } from \"react-icons/bs\";\nimport { HiOutlineExternalLink } from \"react-icons/hi\";\n\nconst ExpandableList = ({ data, header }) => {\n  // const [isActive, setIsActive] = useState(false);\n\n  return (\n    <div className=\"accordion-item\">\n      <div\n        className=\"accordion-title\"\n        style={{ color: \"black\", backgroundColor: \"silver\" }}\n      >\n        <h3>{header}</h3>\n\n      </div>\n      {(\n        <div className=\"accordion-content\">{<Movies list_movies={data} />}</div>\n      )}\n  \n    </div>\n  );\n};\n\nexport default ExpandableList;\n","import \"./App.css\";\nimport Axios from \"axios\";\n// import Header from \"./components/Header\";\nimport React, { useState, useEffect } from \"react\";\nimport ExpandableList from \"./components/ExpandableList\";\n\nimport {useParams, BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n// \"logged user\": \"\",\n// \"watched\": [],\n// \"recommended_movies\": [],\n// \"status\": \"User does not exist visit http://localhost:8000/create_user/?user_id=raja\",\n// \"register here\": \"http://localhost:8000/create_user/?user_id=raja\"\n\nconst base_url = 'https://movie-recommend-shagun.herokuapp.com/'\nconst Login = ({ params }) => {\n  let { id } = useParams();\n  // console.log('id is',id, params)\n  let [user, setUser] = useState('');\n  let [watched, setWatched] = useState([]);\n  let [state, setState] = useState('')\n  let [register, setRegister] = useState('')\n  let [exact_match, setExact] = useState([])\n  let [recommend_by_name, setName] = useState([])\n  let [recommend_by_genre, setGenre] = useState([])\n  let [recommend_by_cast, setCast] = useState([])\n  let [recommend_final, setFinal] = useState([])\n  let [sort, setSort] = useState(0);\n//   let [, setScraps] = useState([]);\n  const [one, enable1] = useState(true);\n  const [two, enable2] = useState(true);\n  const [three, enable3] = useState(true);\n  const [four, enable4] = useState(true);\n\n\n  useEffect(() => {\n    fetchMovies();\n    // sortMovies();\n  }, []);\n\n\n\n\n  const fetchMovies = async () => {\n    const response = await Axios(base_url+\"login/?user_id=\" +params);\n    // console.log('response',response)\n    var data = response.data\n\n    var user_log = data['logged user']\n    var watched_user = data['watched']\n    fetchRecommended(data['recommended_movies'])\n    // var ans = []\n    // var curr = 0\n    // for(var i in data){\n    //   ans.push(data[i]['title']);\n    // }\n    // console.log(ans)\n    // setScraps(ans);\n    setWatched(watched_user)\n    setUser(user_log)\n    // console.log(\"length= \"+scraps)\n  };\n  const fetchRecommended = async (data) => {\n      if (data.length == 0 ){\n        const response = await Axios(base_url+\"create_user/?user_id=\" +params)\n        fetchMovies()\n        return\n      }\n    // console.log('fdata',data)\n    var exact_match_f = convert_react_child(data['exact match'],'title')\n    // console.log(exact_match_f)\n    setExact(exact_match_f)\n    if( data['recommended_match']['By Name'] != null){\n        setName(convert_react_child(data['recommended_match']['By Name'],'title'))\n    }\n    if( data['recommended_match']['By Genre'] != null){\n    setGenre(convert_react_child(data['recommended_match']['By Genre'],'title'))\n    }\n    if( data['recommended_match']['By Cast'] != null){\n    setCast(convert_react_child(data['recommended_match']['By Cast'],'title'))\n    }\n    if( data['recommended_match']['final_show_to_user'] != null){\n    setFinal(convert_react_child(data['recommended_match']['final_show_to_user'],'title'))\n    }\n    // console.log(\"length= \"+scraps)\n  };\n  const convert_react_child = (data, key) =>{\n    var ans = []\n    var curr = 0\n    // console.log('ccccccccc', data)\n    for(var i in data){\n        // console.log('ccccccccc', data[i][key])\n      ans.push([data[i][key],data[i]['release_date'],data[i]['homepage']]);\n    }\n    return ans\n  }\n  const [selected, setSelected] = React.useState(\"Newest First\");\n  const changeSelected = () => {\n    console.log('selected=',selected)\n    if (selected==1){\n      setSelected(0)\n    }\n    else{\n      setSelected(1)\n    }\n\n  };\n  let options = null;\n  const sort_array = [\"Newest First\", \"Oldest First\", \"A to Z\", \"Z to A\"];\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n  };\n\n  options = sort_array.map((x) => <option key={x}>{x}</option>);\n\n  if (selected === \"Oldest First\") sort = 1;\n  else if (selected === \"Newest First\") sort = 2;\n  else if (selected === \"A to Z\") sort = 3;\n  else if (selected === \"Z to A\") sort = 4;\n  const sortMovies = (k) => {\n    \n    console.log('sorting',k)\n    if (sort == 1){\n       return k.sort((a, b) => a[1].localeCompare(b[1]))\n    }\n    if(sort == 2){\n      return k.sort((a, b) => b[1].localeCompare(a[1]))\n    }\n    if(sort == 3){\n      k.sort()\n      // return k\n    }\n    if(sort == 4){\n      k.sort()\n      k.reverse()\n      // return k\n    }\n    console.log('a sorting',k)\n    return k\n  };\n \n  return (\n\n      <div >\n        <h1 color=\"white\">{(\"user logged :\"+ (user)).toUpperCase()}</h1>\n        <form style={{ marginBlock: 10 }}>\n        <label>Sort By: </label>\n        <select onChange={changeSelectOptionHandler}>{options}</select>\n      </form>\n      {user == '' && <h2>Loading...</h2>}\n        <ExpandableList data={watched} header={\"User WatchList\"}/>\n\n\n        {one && exact_match.length > 0  && <ExpandableList data={sortMovies(exact_match)} header={\"Exact Movies\"}/>}\n        \n        {recommend_by_name.length > 0 && <ExpandableList data={sortMovies(recommend_by_name)} header={\"Recommended By Name\"}/>}\n\n        {recommend_final.length > 0 &&  <ExpandableList data={sortMovies(recommend_final)} header ={\"Final Recommendation\"}/>}\n\n        {recommend_by_genre.length>0  && <ExpandableList data={sortMovies(recommend_by_genre)} header={\"recommended By Genre\"}/>}\n\n        {recommend_by_cast.length > 0 && <ExpandableList data={sortMovies(recommend_by_cast)} header={ \"Recommended By Cast\"}/>}\n\n      </div>\n    \n  );\n}\n\nexport default Login;","import \"./App.css\";\nimport Axios from \"axios\";\n// import Header from \"./components/Header\";\nimport React, { useState, useEffect } from \"react\";\nimport ExpandableList from \"./components/ExpandableList\";\n\nimport {useParams, BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n// \"logged user\": \"\",\n// \"watched\": [],\n// \"recommended_movies\": [],\n// \"status\": \"User does not exist visit http://localhost:8000/create_user/?user_id=raja\",\n// \"register here\": \"http://localhost:8000/create_user/?user_id=raja\"\n\n\nconst Recommend = ({ params }) => {\n  let { id } = useParams();\n  console.log('id is',id, params)\n\n  let [exact_match, setExact] = useState([])\n  let [recommend_by_name, setName] = useState([])\n  let [recommend_by_genre, setGenre] = useState([])\n  let [recommend_by_cast, setCast] = useState([])\n  let [recommend_final, setFinal] = useState([])\n  let [sort, setSort] = useState(0);\n//   let [, setScraps] = useState([]);\n\n\n  useEffect(() => {\n    fetchScraps();\n\n  }, []);\n  const base_url = 'https://movie-recommend-shagun.herokuapp.com/'\n  const fetchScraps = async () => {\n    const response = await Axios(base_url+\"recommend_movie?movie=\" + params);\n    // console.log('response',response)\n    var data = response.data\n    console.log(data)\n    fetchRecommended(data['data'])\n\n  };\n  const fetchRecommended = async (data) => {\n\n    console.log('fdata',data['data'])\n    for(var i in data){\n        console.log(i)\n    }\n    // console.log('sdata', data['exact match'])\n    var exact_match_f = [data['exact match']['title'], data['exact match']['release_date'], data['exact match']['homepage']]\n    // console.log('edata',exact_match_f)\n    setExact([exact_match_f])\n    if( data['recommended_match']['By Name'] != null){\n        setName(convert_react_child(data['recommended_match']['By Name'],'title'))\n    }\n    if( data['recommended_match']['By Genre'] != null){\n    setGenre(convert_react_child(data['recommended_match']['By Genre'],'title'))\n    }\n    if( data['recommended_match']['By Cast'] != null){\n    setCast(convert_react_child(data['recommended_match']['By Cast'],'title'))\n    }\n    if( data['recommended_match']['final_show_to_user'] != null){\n    setFinal(convert_react_child(data['recommended_match']['final_show_to_user'],'title'))\n    }\n    // console.log(\"length= \"+scraps)\n  };\n  const convert_react_child = (data, key) =>{\n    var ans = []\n    var curr = 0\n    // console.log('ccccccccc', data)\n    for(var i in data){\n        // console.log('ccccccccc', data[i][key])\n      ans.push([data[i][key],data[i]['release_date'],data[i]['homepage']]);\n    }\n    return ans\n  }\n  const [selected, setSelected] = React.useState(\"Newest First\");\n  const changeSelected = () => {\n    console.log('selected=',selected)\n    if (selected==1){\n      setSelected(0)\n    }\n    else{\n      setSelected(1)\n    }\n\n  };\n  let options = null;\n  const sort_array = [\"Newest First\", \"Oldest First\", \"A to Z\", \"Z to A\"];\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n  };\n\n  options = sort_array.map((x) => <option key={x}>{x}</option>);\n\n  if (selected === \"Oldest First\") sort = 1;\n  else if (selected === \"Newest First\") sort = 2;\n  else if (selected === \"A to Z\") sort = 3;\n  else if (selected === \"Z to A\") sort = 4;\n  const sortMovies = (k) => {\n    \n    console.log('sorting',k)\n    if (sort == 1){\n       return k.sort((a, b) => a[1].localeCompare(b[1]))\n    }\n    if(sort == 2){\n      return k.sort((a, b) => b[1].localeCompare(a[1]))\n    }\n    if(sort == 3){\n      k.sort()\n      // return k\n    }\n    if(sort == 4){\n      k.sort()\n      k.reverse()\n      // return k\n    }\n    console.log('a sorting',k)\n    return k\n  };\n \n\n  return (\n\n      <div >\n      <form style={{ marginBlock: 10 }}>\n        <label>Sort By: </label>\n        <select onChange={changeSelectOptionHandler}>{options}</select>\n      </form>\n        {exact_match.length == 0 && <h2>Loading...</h2>}\n        {exact_match.length > 0  && <ExpandableList data={sortMovies(exact_match)} header={\"Exact Movies\"}/>}\n        \n        {recommend_by_name.length > 0 && <ExpandableList data={sortMovies(recommend_by_name)} header={\"Recommended By Name\"}/>}\n\n        {recommend_final.length > 0 &&  <ExpandableList data={sortMovies(recommend_final)} header ={\"Final Recommendation\"}/>}\n\n        {recommend_by_genre.length>0  && <ExpandableList data={sortMovies(recommend_by_genre)} header={\"recommended By Genre\"}/>}\n\n        {recommend_by_cast.length > 0 && <ExpandableList data={sortMovies(recommend_by_cast)} header={ \"Recommended By Cast\"}/>}\n\n      </div>\n\n  );\n}\n\nexport default Recommend;","import \"./App.css\";\r\nimport Axios from \"axios\";\r\n// import Header from \"./components/Header\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ExpandableList from \"./components/ExpandableList\";\r\n\r\nconst base_url = 'https://movie-recommend-shagun.herokuapp.com/'\r\n\r\nconst Home = () =>{\r\n\r\n  let [all_movies_list, setScraps] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    fetchScraps();\r\n  }, []);\r\n\r\n  const fetchScraps = async () => {\r\n    const response = await Axios(base_url);\r\n    // console.log('response',response)\r\n    var data = response.data['data']\r\n    var ans = []\r\n    var curr = 0\r\n    for(var i in data){\r\n      ans.push(data[i]['title']);\r\n    }\r\n    // console.log(ans)\r\n    setScraps(ans);\r\n    // console.log(\"length= \"+scraps)\r\n  };\r\n\r\n\r\n  \r\n  return (\r\n<div>\r\n            {all_movies_list.length == 0 && <h2>Loading...</h2>}\r\n            {all_movies_list.length>0 && (\r\n              <ExpandableList\r\n              \r\n                data={all_movies_list}\r\n              />\r\n            )}\r\n\r\n          </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Axios from \"axios\";\n// import Header from \"./components/Header\";\nimport React, { useState, useEffect } from \"react\";\nimport ExpandableList from \"./components/ExpandableList\";\nimport Login from \"./login\";\nimport Recommend from \"./movierecommend\";\nimport Home from \"./Home\";\n// import { Routes, Route } from \"react-router-dom\"\nimport {useParams, BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n{/* <Routes> */}\n  // <Route exact path=\"/login\" component={Login}/>\n  {/* <Route path=\"/about\" component={About}/>\n  <Route path=\"/:user\" component={User}/>\n  <Route component={NoMatch}/> */}\n{/* </Routes> */}\nconst base_url = 'https://movie-recommend-shagun.herokuapp.com/'\n\nfunction App() {\n\n  let all_movies_list = []\n  const setScraps = async (d) => {\n    all_movies_list = d\n  };\n\n  useEffect(() => {\n    \n  }, []);\n\n  const fetchScraps = async () => {\n    const response = await Axios(\"http://localhost:8000/\");\n    // console.log('response',response)\n    var data = response.data['data']\n    var ans = []\n    var curr = 0\n    for(var i in data){\n      ans.push(data[i]['title']);\n    }\n    // console.log(ans)\n    setScraps(ans);\n    // console.log(\"length= \"+scraps)\n  };\n  function LoginV1() {\n    let { user_id } = useParams();\n    // console.log(user_id)\n    return <Login params={user_id}/>;\n  }\n  function RegisterAndLogin() {\n    let { user_id, movie_name } = useParams();\n    // console.log(user_id, movie_name)\n    // console.log(user_id)\n    // return <Login params={user_id}/>;\n    const response =  Axios(base_url+\"login?user_id=\"+user_id+\"&add_movies=\"+movie_name);\n    return <Login params={user_id}/>\n  }\n  function RecommendMovie() {\n    let { movie_name } = useParams();\n \n    return <Recommend params={movie_name}/>\n  }\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n      <Route path = '/login/:user_id/:movie_name'>\n          <div className=\"show\">\n          <RegisterAndLogin/>\n          </div>\n          {/* console.log('path',path) */}\n      </Route>\n      <Route path = '/login/:user_id'>\n          <div className=\"show\">\n          <LoginV1/>\n          </div>\n          {/* console.log('path',path) */}\n      </Route>\n      <Route path = '/recommend/:movie_name'>\n          <div className=\"show\">\n          <RecommendMovie/>\n          </div>\n          {/* console.log('path',path) */}\n      </Route>\n        <Route path = '/'>\n          <div className=\"show\">\n            <Home/>\n          </div>\n      </Route>\n\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}